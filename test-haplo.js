const fs = require('fs');
const path = require('path');

console.log('üîç Testing haplogroup service initialization...');

try {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—É—Ç–∏ –∫ —Ñ–∞–π–ª–∞–º
    const ftdnaPath = path.join(__dirname, 'ftdna_haplo', 'data', 'get.json');
    const yfullPath = path.join(__dirname, 'ftdna_haplo', 'data', 'ytree.json');
    
    console.log('üìÅ Checking file paths...');
    console.log('FTDNA path:', ftdnaPath);
    console.log('YFull path:', yfullPath);
    
    if (!fs.existsSync(ftdnaPath)) {
        throw new Error(`FTDNA data file not found: ${ftdnaPath}`);
    }
    if (!fs.existsSync(yfullPath)) {
        throw new Error(`YFull data file not found: ${yfullPath}`);
    }
    
    console.log('‚úÖ Files exist');
    
    // –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ
    console.log('üìä Loading JSON data...');
    const ftdnaData = JSON.parse(fs.readFileSync(ftdnaPath, 'utf8'));
    console.log('‚úÖ FTDNA data loaded, nodes:', Object.keys(ftdnaData.allNodes || {}).length);
    
    const yfullData = JSON.parse(fs.readFileSync(yfullPath, 'utf8'));
    console.log('‚úÖ YFull data loaded');
    
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∫–ª–∞—Å—Å—ã
    console.log('üèóÔ∏è Initializing classes...');
    
    const { HaploTree } = require('./ftdna_haplo/haplo_functions');
    console.log('‚úÖ HaploTree class loaded');
    
    const { YFullAdapter } = require('./ftdna_haplo/yfull_adapter');
    console.log('‚úÖ YFullAdapter class loaded');
    
    const { SearchIntegrator } = require('./ftdna_haplo/search_integration');
    console.log('‚úÖ SearchIntegrator class loaded');
    
    const HaplogroupService = require('./ftdna_haplo/server/services/haplogroup-service');
    console.log('‚úÖ HaplogroupService class loaded');
    
    // –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä—ã
    console.log('üîß Creating instances...');
    
    const ftdnaTree = new HaploTree(ftdnaData);
    console.log('‚úÖ HaploTree instance created');
    
    const yfullTree = new YFullAdapter(yfullData);
    console.log('‚úÖ YFullAdapter instance created');
    
    const searchIntegrator = new SearchIntegrator(ftdnaTree, yfullTree);
    console.log('‚úÖ SearchIntegrator instance created');
    
    const haplogroupService = new HaplogroupService(ftdnaTree, yfullTree, searchIntegrator);
    console.log('‚úÖ HaplogroupService instance created');
    
    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –º–µ—Ç–æ–¥ checkSubclade
    console.log('üß™ Testing checkSubclade method...');
    
    const testResult = haplogroupService.checkSubclade('K', 'K');
    console.log('Test result K vs K:', testResult);
    
    const testResult2 = haplogroupService.checkSubclade('R1a', 'R');
    console.log('Test result R1a vs R:', testResult2);
    
    console.log('üéâ All tests passed!');
    
} catch (error) {
    console.error('‚ùå Error during initialization:', error.message);
    console.error('Stack trace:', error.stack);
    process.exit(1);
}
